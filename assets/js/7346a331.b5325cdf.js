"use strict";(self.webpackChunkdocs_capi_dev_2=self.webpackChunkdocs_capi_dev_2||[]).push([[543],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>v});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=c(t),h=i,v=s["".concat(l,".").concat(h)]||s[h]||u[h]||r;return t?a.createElement(v,o(o({ref:n},d),{},{components:t})):a.createElement(v,o({ref:n},d))}));function v(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=h;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[s]="string"==typeof e?e:i,o[1]=p;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5565:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var a=t(7462),i=(t(7294),t(3905));const r={},o="Why capi.dev?",p={unversionedId:"faq/why-capi-dev",id:"faq/why-capi-dev",title:"Why capi.dev?",description:"capi.dev is to designed to facilitate developing with Capi, while only being a",source:"@site/docs/faq/why-capi-dev.md",sourceDirName:"faq",slug:"/faq/why-capi-dev",permalink:"/faq/why-capi-dev",draft:!1,editUrl:"https://github.com/paritytech/docs.capi.dev/tree/main/docs/faq/why-capi-dev.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FAQ",permalink:"/faq/"},next:{title:"Why Deno?",permalink:"/faq/why-deno"}},l={},c=[{value:"How do I use an entirely local setup?",id:"how-do-i-use-an-entirely-local-setup",level:2},{value:"Can I host an internal instance of <code>capi.dev</code>?",id:"can-i-host-an-internal-instance-of-capidev",level:2},{value:"Why a codegen server?",id:"why-a-codegen-server",level:2}],d={toc:c},s="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(s,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"why-capidev"},"Why ",(0,i.kt)("inlineCode",{parentName:"h1"},"capi.dev"),"?"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"capi.dev")," is to designed to facilitate developing with Capi, while only being a\ndev-time dependency. ",(0,i.kt)("inlineCode",{parentName:"p"},"capi.dev")," is the recommended and ergonomic approach, but\nan entirely local setup is supported."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"capi.dev")," is a public instance of Capi's codegen server. For Node, the codegen\nserver serves package tarballs (like ",(0,i.kt)("inlineCode",{parentName:"p"},"npmjs.org"),"), and for Deno, it serves ",(0,i.kt)("inlineCode",{parentName:"p"},".js"),"\nand ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," files (like ",(0,i.kt)("inlineCode",{parentName:"p"},"deno.land"),"). In both cases, it is a development-only\ndependency \u2013 once your app is deployed, it does not use ",(0,i.kt)("inlineCode",{parentName:"p"},"capi.dev"),", and thus it\nwill continue to work even in the unlikely event that ",(0,i.kt)("inlineCode",{parentName:"p"},"capi.dev")," goes down."),(0,i.kt)("h2",{id:"how-do-i-use-an-entirely-local-setup"},"How do I use an entirely local setup?"),(0,i.kt)("p",null,"You do not have to use ",(0,i.kt)("inlineCode",{parentName:"p"},"capi.dev")," for codegen. To run the codegen server\nlocally, simply run ",(0,i.kt)("inlineCode",{parentName:"p"},"capi serve"),", and it will be available at\nhttp://localhost:4646/. Then, pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"--server http://localhost:4646/")," option\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"capi sync"),"."),(0,i.kt)("h2",{id:"can-i-host-an-internal-instance-of-capidev"},"Can I host an internal instance of ",(0,i.kt)("inlineCode",{parentName:"h2"},"capi.dev"),"?"),(0,i.kt)("p",null,"Yes, you can host your own instance of the codegen server, as all of the code is\nopen-source. We use Deno Deploy to host ",(0,i.kt)("inlineCode",{parentName:"p"},"capi.dev")," (with\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/paritytech/capi/blob/main/server/capi.dev/delegatee.ts"},"this entrypoint"),"),\nwhich uses S3 buckets for storage & caching."),(0,i.kt)("h2",{id:"why-a-codegen-server"},"Why a codegen server?"),(0,i.kt)("p",null,"The advantage of using a codegen server instead of a traditional codegen\napproach is that it allows the codegen to be treated like any other dependency.\nIn a traditional codegen approach, the codegen is run as a separate\nbuild/install step and imported like project code, not library code. This\ncreates friction, and \u2013 importantly \u2013 means that the codegen output is baked\nseparately into each library, so if multiple libraries are using the same chain,\nthe codegen output will not be deduplicated, bloating bundle sizes."))}u.isMDXComponent=!0}}]);