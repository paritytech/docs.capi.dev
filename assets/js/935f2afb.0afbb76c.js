"use strict";(self.webpackChunkdocs_capi_dev_2=self.webpackChunkdocs_capi_dev_2||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/","docId":"introduction"},{"type":"category","label":"Setup","items":[{"type":"link","label":"Net Specs","href":"/setup/net_specs","docId":"setup/net_specs"},{"type":"link","label":"Development Networks","href":"/setup/development_nets","docId":"setup/development_nets"},{"type":"link","label":"Build Tool Integration","href":"/setup/build_tool_integration","docId":"setup/build_tool_integration"}],"collapsed":false,"collapsible":false,"href":"/setup/"},{"type":"category","label":"Basics","items":[{"type":"link","label":"Rune Primer","href":"/basics/rune_primer","docId":"basics/rune_primer"},{"type":"link","label":"Blocks","href":"/basics/blocks","docId":"basics/blocks"},{"type":"link","label":"Storage","href":"/basics/storage","docId":"basics/storage"},{"type":"link","label":"Extrinsics","href":"/basics/extrinsics","docId":"basics/extrinsics"}],"collapsed":false,"collapsible":false,"href":"/basics/"},{"type":"link","label":"Types","href":"/types","docId":"types"},{"type":"category","label":"Rune","items":[{"type":"link","label":"Subclasses","href":"/rune/subclasses","docId":"rune/subclasses"},{"type":"link","label":"Interop With Other Libraries","href":"/rune/interop","docId":"rune/interop"},{"type":"category","label":"Advanced","items":[{"type":"link","label":"Timing","href":"/rune/advanced/timing","docId":"rune/advanced/timing"},{"type":"link","label":"Custom Rune Logic","href":"/rune/advanced/custom-runes","docId":"rune/advanced/custom-runes"},{"type":"link","label":"Runes vs Observables","href":"/rune/advanced/runes-vs-observables","docId":"rune/advanced/runes-vs-observables"}],"collapsed":false,"collapsible":false,"href":"/rune/advanced/"}],"collapsed":false,"collapsible":false,"href":"/rune/"},{"type":"category","label":"FAQ","items":[{"type":"link","label":"Why capi.dev?","href":"/faq/why-capi-dev","docId":"faq/why-capi-dev"},{"type":"link","label":"Why Deno?","href":"/faq/why-deno","docId":"faq/why-deno"}],"collapsed":false,"collapsible":false,"href":"/faq/"}]},"docs":{"basics/blocks":{"id":"basics/blocks","title":"Blocks","description":"Latest Finalized Block Hash","sidebar":"tutorialSidebar"},"basics/extrinsics":{"id":"basics/extrinsics","title":"Extrinsics","description":"At the heart of any extrinsic is some call data. Let\'s first create some call","sidebar":"tutorialSidebar"},"basics/index":{"id":"basics/index","title":"Basics","description":"Let\'s say we want to work with the chain corresponding to the following net","sidebar":"tutorialSidebar"},"basics/rune_primer":{"id":"basics/rune_primer","title":"Rune Primer","description":"Before we move any further, let\'s briefly touch on Rune (which we cover more in","sidebar":"tutorialSidebar"},"basics/storage":{"id":"basics/storage","title":"Storage","description":"The first step in interacting with storage is to create a Rune representing the","sidebar":"tutorialSidebar"},"faq/index":{"id":"faq/index","title":"FAQ","description":"Capi has made a few design decisions that might seem unusual, but substantially","sidebar":"tutorialSidebar"},"faq/why-capi-dev":{"id":"faq/why-capi-dev","title":"Why capi.dev?","description":"capi.dev is to designed to facilitate developing with Capi, while only being a","sidebar":"tutorialSidebar"},"faq/why-deno":{"id":"faq/why-deno","title":"Why Deno?","description":"Capi supports Deno, Node, and (modern) browsers. We are developing our codebase","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"Announcing Capi v0.1.0-gamma.0","sidebar":"tutorialSidebar"},"rune/advanced/custom-runes":{"id":"rune/advanced/custom-runes","title":"Custom Rune Logic","description":"None of Rune\'s built-in operators are privileged; they could all be implemented","sidebar":"tutorialSidebar"},"rune/advanced/index":{"id":"rune/advanced/index","title":"Advanced","description":"If you\'d like to delve into the details of Rune, this section is for you.","sidebar":"tutorialSidebar"},"rune/advanced/runes-vs-observables":{"id":"rune/advanced/runes-vs-observables","title":"Runes vs Observables","description":"Runes of a Feather Update Together","sidebar":"tutorialSidebar"},"rune/advanced/timing":{"id":"rune/advanced/timing","title":"Timing","description":"Rune has a \\"timing system\\". (It\'s important to note that the \\"time\\" in this","sidebar":"tutorialSidebar"},"rune/index":{"id":"rune/index","title":"Rune","description":"What Is Rune?","sidebar":"tutorialSidebar"},"rune/interop":{"id":"rune/interop","title":"Interop With Other Libraries","description":"React/Preact","sidebar":"tutorialSidebar"},"rune/subclasses":{"id":"rune/subclasses","title":"Subclasses","description":"Rune enables fluent APIs by facilitating the use of Rune subclasses. Throughout","sidebar":"tutorialSidebar"},"setup/build_tool_integration":{"id":"setup/build_tool_integration","title":"Build Tool Integration","description":"If you wish to use Capi\'s development network orchestrator, it\'s important that","sidebar":"tutorialSidebar"},"setup/development_nets":{"id":"setup/development_nets","title":"Development Networks","description":"During development, you\'ll likely want to run the Capi server as to make use of","sidebar":"tutorialSidebar"},"setup/index":{"id":"setup/index","title":"Setup","description":"Lifecycle","sidebar":"tutorialSidebar"},"setup/net_specs":{"id":"setup/net_specs","title":"Net Specs","description":"Your net spec file, nets.ts, describes all the networks with which you wish to","sidebar":"tutorialSidebar"},"types":{"id":"types","title":"Types","description":"The types of the on-chain world are declared in a given","sidebar":"tutorialSidebar"}}}')}}]);