"use strict";(self.webpackChunkdocs_capi_dev_2=self.webpackChunkdocs_capi_dev_2||[]).push([[994],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(k,s(s({ref:t},c),{},{components:n})):r.createElement(k,s({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},s="Development Networks",l={unversionedId:"setup/development_nets",id:"setup/development_nets",title:"Development Networks",description:"During development, you'll likely want to run the Capi server as to make use of",source:"@site/docs/setup/development_nets.md",sourceDirName:"setup",slug:"/setup/development_nets",permalink:"/setup/development_nets",draft:!1,editUrl:"https://github.com/paritytech/docs.capi.dev/tree/main/docs/setup/development_nets.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Net Specs",permalink:"/setup/net_specs"},next:{title:"Build Tool Integration",permalink:"/setup/build_tool_integration"}},i={},p=[{value:"Bind To Your Process",id:"bind-to-your-process",level:2},{value:"Targets",id:"targets",level:2},{value:"Development Users",id:"development-users",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"development-networks"},"Development Networks"),(0,a.kt)("p",null,"During development, you'll likely want to run the Capi server as to make use of\nephemeral development networks."),(0,a.kt)("p",null,"To start the Capi server, use the CLI's ",(0,a.kt)("inlineCode",{parentName:"p"},"serve")," command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"capi serve\n")),(0,a.kt)("p",null,"This will start the Capi server on port 4646. You can override the port with\n",(0,a.kt)("inlineCode",{parentName:"p"},"--port"),"."),(0,a.kt)("h2",{id:"bind-to-your-process"},"Bind To Your Process"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"serve")," conveniently supports specificity of an adjacent process to be run; this\nensures that the Capi server is alive for the duration of your process (and then\nclosed gracefully)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"capi serve -- <your-command-here>\n")),(0,a.kt)("p",null,"This is useful for executing development scripts. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="nets.ts"',title:'"nets.ts"'},'import { bins, net } from "capi/nets"\n\nconst bin = bins({ polkadot: ["polkadot", "v0.9.38"] })\n\nexport const polkadotDev = net.dev({\n  bin: bin.polkadot,\n  chain: "polkadot-dev",\n})\n\nexport const polkadot = net.ws({\n  url: "wss://rpc.polkadot.io/",\n})\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="main.js"',title:'"main.js"'},'import { polkadotDev } from "@capi/polkadot-dev"\n\nconst accountKeys = await polkadotDev.System.Account.keys({ limit: 10 }).run()\n')),(0,a.kt)("p",null,"Running ",(0,a.kt)("inlineCode",{parentName:"p"},"capi serve -- node main.js")," will first start the Capi server and then\nrun the node script, spawning an ephemeral Polkadot development network (based\non the net spec)."),(0,a.kt)("h2",{id:"targets"},"Targets"),(0,a.kt)("p",null,"To avoid needing to replace import statements between development and\nproduction, we can specify ",(0,a.kt)("inlineCode",{parentName:"p"},"targets")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"nets.ts")," file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="nets.ts"',title:'"nets.ts"'},'import { bins, net } from "capi/nets"\n\nconst bin = bins({ polkadot: ["polkadot", "v0.9.38"] })\n\nexport const polkadotDev = net.dev({\n  bin: bin.polkadot,\n  chain: "polkadot-dev",\n})\n\nexport const polkadot = net.ws({\n  url: "wss://rpc.polkadot.io/",\n  // highlight-next-line\n  targets: { dev: polkadotDev },\n})\n')),(0,a.kt)("p",null,"Now we can import from ",(0,a.kt)("inlineCode",{parentName:"p"},"@capi/polkadot"),", both during development and production."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="main.js"',title:'"main.js"'},'// highlight-next-line\nimport { polkadot } from "@capi/polkadot"\n\nconst accountKeys = await polkadot.System.Account.keys({ limit: 10 }).run()\n')),(0,a.kt)("p",null,"When run normally, this will query the main polkadot network, but if you run the\ncapi server with a different target:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"capi serve --target dev -- node main.js\n")),(0,a.kt)("p",null,"This will instead spawn and query an ephemeral Polkadot development network."),(0,a.kt)("h2",{id:"development-users"},"Development Users"),(0,a.kt)("p",null,"When developing against a dev chain, the ",(0,a.kt)("inlineCode",{parentName:"p"},"createDevUsers")," utility provides\n",(0,a.kt)("inlineCode",{parentName:"p"},"Sr25519")," instances, which correspond to dev users who are pre-seeded with\nfunds. This simplifies signing extrinsics for submission to the given dev chain."),(0,a.kt)("p",null,"The following creates two dev users."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { createDevUsers } from "capi"\n\nconst [userA, userB] = await createDevUsers(2)\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"createDevUsers")," util is overloaded for the sake of consistent naming. You\ncan omit a number and destructure the named users."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const { alexa, billy } = await createDevUsers()\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: ",(0,a.kt)("inlineCode",{parentName:"p"},"createDevUsers")," always returns fresh users (up to 10K per server\ninstance)."),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const { alexa: alexaA } = await createDevUsers()\nconst { alexa: alexaB } = await createDevUsers()\n\nassert(alexaA !== alexaB)\n"))))}d.isMDXComponent=!0}}]);