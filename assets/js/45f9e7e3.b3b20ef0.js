"use strict";(self.webpackChunkdocs_capi_dev_2=self.webpackChunkdocs_capi_dev_2||[]).push([[119],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,s(s({ref:t},p),{},{components:n})):a.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={},s="Extrinsics",o={unversionedId:"basics/extrinsics",id:"basics/extrinsics",title:"Extrinsics",description:"At the heart of any extrinsic is some call data. Let's first create some call",source:"@site/docs/basics/extrinsics.md",sourceDirName:"basics",slug:"/basics/extrinsics",permalink:"/basics/extrinsics",draft:!1,editUrl:"https://github.com/paritytech/docs.capi.dev/tree/main/docs/basics/extrinsics.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Storage",permalink:"/basics/storage"},next:{title:"Types",permalink:"/types"}},l={},c=[{value:"Signature Patterns",id:"signature-patterns",level:2},{value:"Submission &amp; Beyond",id:"submission--beyond",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"extrinsics"},"Extrinsics"),(0,i.kt)("p",null,"At the heart of any extrinsic is some call data. Let's first create some call\ndata to represent one of the most common runtime operations: a balance transfer."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: these examples assume there are two\n",(0,i.kt)("a",{parentName:"p",href:"/setup/development_nets#development-users"},"test users")," in scope (",(0,i.kt)("inlineCode",{parentName:"p"},"alexa")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"billy"),").")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { polkadot } from "@capi/polkadot"\n\nconst call = polkadot.Balances.transfer({\n  value: 12345n,\n  dest: billy.address,\n})\n')),(0,i.kt)("p",null,"Now we must decide what to do with this call data. In most cases, you'll want to\nsign it so that it can be submitted, either by you or by someone acting on your\nbehalf."),(0,i.kt)("h2",{id:"signature-patterns"},"Signature Patterns"),(0,i.kt)("p",null,'Different chains can implement different means of signing and handling of signed\nextras and "additionals." Such handling impacts behavior such as tipping and\nvalidation. There is no obvious ',(0,i.kt)("em",{parentName:"p"},"good")," way to generate factories for\nchain-specific signature management. Fortunately, Capi exposes several\nhard-coded pattern libraries which cover the most common of signatures."),(0,i.kt)("p",null,"Let's import and utilize the Polkadot signature pattern."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { polkadot } from "@capi/polkadot"\nimport { signature } from "capi/patterns/signature/polkadot"\n\nconst signed = polkadot.Balances\n  .transfer({\n    value: 12345n,\n    dest: billy.address,\n  })\n  .signed(signature({ sender: alexa }))\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: we rename ",(0,i.kt)("inlineCode",{parentName:"p"},"call")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"signed")," given that we're now calling ",(0,i.kt)("inlineCode",{parentName:"p"},"signed"),",\nwhich chains into a ",(0,i.kt)("inlineCode",{parentName:"p"},"SignedExtrinsicRune"),".")),(0,i.kt)("p",null,"We can do a few things with the resulting ",(0,i.kt)("inlineCode",{parentName:"p"},"SignedExtrinsicRune"),"; two of the most\ncommon use cases are submission and serialization, from which we get a\nrepresentation of the signed extrinsic for later submission."),(0,i.kt)("h2",{id:"submission--beyond"},"Submission & Beyond"),(0,i.kt)("p",null,"To model the submission of the extrinsic, we use the ",(0,i.kt)("inlineCode",{parentName:"p"},"sent")," method on\n",(0,i.kt)("inlineCode",{parentName:"p"},"SignedExtrinsicRune"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const sent = polkadot.Balances\n  .transfer({/* ... */})\n  .signed(signature({ sender: alexa }))\n  .sent()\n")),(0,i.kt)("p",null,"The resulting ",(0,i.kt)("inlineCode",{parentName:"p"},"ExtrinsicStatusRune")," contains a wide range of methods:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dbgStatus"),": console logs transaction statuses as they're received"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"transactionStatuses"),": accepts a callback, to be called with transaction statuses as\nthey're received"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"inBlock"),": gives us the ",(0,i.kt)("inlineCode",{parentName:"li"},"inBlock")," hash"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"inBlockEvents"),": gives us the ",(0,i.kt)("inlineCode",{parentName:"li"},"inBlock")," events"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"finalized"),": gives us the ",(0,i.kt)("inlineCode",{parentName:"li"},"finalized")," hash"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"finalizedEvents"),": gives us the ",(0,i.kt)("inlineCode",{parentName:"li"},"finalized")," events")))}d.isMDXComponent=!0}}]);