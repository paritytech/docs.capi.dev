"use strict";(self.webpackChunkdocs_capi_dev_2=self.webpackChunkdocs_capi_dev_2||[]).push([[602],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,k=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6738:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},i="Setup",p={unversionedId:"setup/index",id:"setup/index",title:"Setup",description:"Lifecycle",source:"@site/docs/setup/index.md",sourceDirName:"setup",slug:"/setup/",permalink:"/setup/",draft:!1,editUrl:"https://github.com/paritytech/docs.capi.dev/tree/main/docs/setup/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/"},next:{title:"Net Specs",permalink:"/setup/net_specs"}},l={},c=[{value:"Lifecycle",id:"lifecycle",level:2},{value:"Installation",id:"installation",level:2},{value:"CLI",id:"cli",level:2},{value:"<code>nets.ts</code>",id:"netsts",level:2},{value:"<code>sync</code>ing",id:"syncing",level:2},{value:"Use Your Chain-Specific API",id:"use-your-chain-specific-api",level:2}],s={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setup"},"Setup"),(0,r.kt)("h2",{id:"lifecycle"},"Lifecycle"),(0,r.kt)("p",null,"Let's briefly touch on the Capi usage lifecycle at a high level."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In Node projects, we install Capi (not applicable to Deno projects)."),(0,r.kt)("li",{parentName:"ol"},'We define our "net specs", a file which exports descriptions (i.e. net specs)\nof what chains we\'re targeting.'),(0,r.kt)("li",{parentName:"ol"},'Whenever we update our net specs, we "sync." This updates your manifest\n(usually a ',(0,r.kt)("inlineCode",{parentName:"li"},"package.json")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"import_map.json"),") with the Capi-generated\ndependencies.")),(0,r.kt)("p",null,"During development, we may also use Capi to launch and test against ephemeral\nnetworks, but more on this ",(0,r.kt)("a",{parentName:"p",href:"./development_nets"},"later"),"."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"NPM-install ",(0,r.kt)("inlineCode",{parentName:"p"},"capi")," (not applicable for Deno users)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: The minimum supported Node version is 20, as we require the\n",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/docs/latest-v20.x/api/webcrypto.html#web-crypto-api"},"Web Crypto API"),"\nbe accessible from ",(0,r.kt)("inlineCode",{parentName:"p"},"globalThis.crypto")," for the sake of browser compatibility.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm i capi\n")),(0,r.kt)("h2",{id:"cli"},"CLI"),(0,r.kt)("p",null,"You may also want to add Capi to your scripts/tasks for convenience."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"package.json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'{\n  // ...\n  "scripts": {\n    // ...\n+   "capi": "capi"\n  }\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Deno users can reference the CLI via the ",(0,r.kt)("inlineCode",{parentName:"p"},"deno.land/x")," distribution URL."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"deno.jsonc")),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'{\n  // ...\n  "tasks": {\n    // ...\n+   "capi": "deno run -r -A https://deno.land/x/capi/main.ts"\n  }\n}\n'))),(0,r.kt)("h2",{id:"netsts"},(0,r.kt)("inlineCode",{parentName:"h2"},"nets.ts")),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"nets.ts")," file; for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { net } from "capi/nets"\n\nexport const polkadot = net.ws({ url: "wss://rpc.polkadot.io" })\n')),(0,r.kt)("p",null,"This file is covered more in depth in ",(0,r.kt)("a",{parentName:"p",href:"./net_specs"},"the ",(0,r.kt)("inlineCode",{parentName:"a"},"nets.ts")," section"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: you can forgo this setup if your app determines target chain at runtime.\nFor an example of such usage, see\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/capi/blob/main/examples/dynamic.eg.ts"},"the dynamic example"),".")),(0,r.kt)("h2",{id:"syncing"},(0,r.kt)("inlineCode",{parentName:"h2"},"sync"),"ing"),(0,r.kt)("p",null,"Once you've configured your net specs, use the Capi CLI's ",(0,r.kt)("inlineCode",{parentName:"p"},"sync")," command to\nprepare the code generation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"capi sync node # or `capi sync deno`\n")),(0,r.kt)("p",null,"In the case of Node.js projects, syncing will update your ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," with\nnew dependencies for each net spec (each net spec's export name will be\nkebab-cased and prefixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"@capi/"),")."),(0,r.kt)("p",null,"For example, for the ",(0,r.kt)("inlineCode",{parentName:"p"},"nets.ts")," file in the previous section, the resulting\npackage additions would be as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},' {\n   // ...\n   "dependencies": {\n     // ...\n+    "@capi/polkadot": "..."\n  }\n }\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"In the case of Deno projects, syncing will update the ",(0,r.kt)("inlineCode",{parentName:"p"},"import_map.json"),".")),(0,r.kt)("p",null,"If you're using Node, run ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install")," (or the equivalent with your package\nmanager of choice)."),(0,r.kt)("h2",{id:"use-your-chain-specific-api"},"Use Your Chain-Specific API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { polkadot } from "@capi/polkadot"\n\nconst accounts = await polkadot.System.Account.entries({ limit: 10 }).run()\n')))}d.isMDXComponent=!0}}]);