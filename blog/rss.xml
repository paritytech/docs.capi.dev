<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Capi Docs Blog</title>
        <link>https://docs.capi.dev/blog</link>
        <description>Capi Docs Blog</description>
        <lastBuildDate>Thu, 29 Jun 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Capi v0.1.0-gamma.0]]></title>
            <link>https://docs.capi.dev/blog/2023/06/29/v0.1.0-gamma.0</link>
            <guid>https://docs.capi.dev/blog/2023/06/29/v0.1.0-gamma.0</guid>
            <pubDate>Thu, 29 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Today marks]]></description>
            <content:encoded><![CDATA[<p>Today marks
<a href="https://github.com/paritytech/capi/releases/tag/v0.1.0-gamma.0" target="_blank" rel="noopener noreferrer">the first 'gamma' release</a>
of <a href="https://docs.capi.dev" target="_blank" rel="noopener noreferrer">Capi</a>, a TypeScript framework for crafting
interactions with Substrate chains. For over a year, we've been developing in
the open, experimenting with different designs and tirelessly iterating. After
49 beta releases, we're now confident that Capi's architecture, and developer
experience can support and grow with the Polkadot ecosystem. <strong>We're holding off
on a formal v0.1.0 release until stabilization of the new JSON RPC API spec and
related Smoldot integration.</strong> That being said, we would be grateful for your
feedback. Please visit <a href="https://docs.capi.dev/setup" target="_blank" rel="noopener noreferrer">the setup guide</a> to get
started with Capi and don't hesitate to engage us about anything Capi-related in
<a href="https://github.com/paritytech/capi/issues" target="_blank" rel="noopener noreferrer">the GitHub issues</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="release-highlights">Release Highlights<a href="#release-highlights" class="hash-link" aria-label="Direct link to Release Highlights" title="Direct link to Release Highlights">​</a></h2><p>Let's touch on a few parts of the experience that we believe will bring joy to
our community (especially you beautiful TypeScript developers).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fully-typed-apis-for-every-chain">Fully-Typed APIs For Every Chain<a href="#fully-typed-apis-for-every-chain" class="hash-link" aria-label="Direct link to Fully-Typed APIs For Every Chain" title="Direct link to Fully-Typed APIs For Every Chain">​</a></h3><p>One of the qualities we love most about the Polkadot ecosystem is its focus on
interoperability. Everything from XCM integration, to Polkadot's core
architecture, to the very name itself is geared towards a future in which
purpose-built chains can talk to one another. It would stand to reason that an
app developer may want to integrate with many chains — potentially within the
same program. Capi makes this easy. Simply declare the nets with which you wish
to interact.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_Ktv7">nets.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> net </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"capi/nets"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> polkadot </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> net</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">ws</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> url</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"wss://rpc.polkadot.io/"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> statemint </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> net</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">ws</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> url</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"wss://statemint-rpc.polkadot.io/"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> collectives </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> net</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">ws</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> url</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"wss://collectives.api.onfinality.io/public-ws"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token comment" style="color:rgb(0, 128, 0)">// ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, <a href="/setup#syncing"><code>sync</code></a> and import corresponding, chain-specific APIs.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_Ktv7">main.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  polkadot</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// the root of the chain's API, from which one can access pallets, storage, etc.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  AccountInfo</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(0, 128, 0)">// a TypeScript type based on a type from the Rust source</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token comment" style="color:rgb(0, 128, 0)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"@capi/polkadot"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>These APIs are typed according to the unique properties of each chain. You can
compose interactions across chains with confidence. Follow any red lines to
victory.</p><p>To learn more, see our <a href="/types">type conversion guide</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="capidev"><code>capi.dev</code><a href="#capidev" class="hash-link" aria-label="Direct link to capidev" title="Direct link to capidev">​</a></h3><p>We host a public instance of our codegen server on <code>capi.dev</code>, for ease of use
(but local codegen is also supported). This allows developers to treat the
codegen like any other library, in both Node and Deno. It also allows the
codegen to be deduplicated between libraries, reducing bundle sizes.</p><p>For more information on our reasoning behind <code>capi.dev</code>, and the alternatives,
see <a href="/faq/why-capi-dev">"Why capi.dev?"</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ephemeral-development-networks">Ephemeral Development Networks<a href="#ephemeral-development-networks" class="hash-link" aria-label="Direct link to Ephemeral Development Networks" title="Direct link to Ephemeral Development Networks">​</a></h3><p>Capi makes it easy for developers to configure and test against ephemeral
networks based on any runtime.</p><p>For example, a simple XCM-compatible relay chain and parachain:</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_Ktv7">nets.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> net </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"capi/nets"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> rococo </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> net</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">dev</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  bin</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"polkadot"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  chain</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"rococo-local"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> rococoContracts </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> rococo</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">parachain</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  bin</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"polkadot-parachain"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  chain</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"contracts-rococo-local"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  id</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1000</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can then import from <code>@capi/rococo</code> and <code>@capi/rococo-contracts</code>, which will
automatically spawn the network.</p><p>For more information, refer to our guide on
<a href="/setup/development_nets">development setup</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="automatic-binary-installation">Automatic Binary Installation<a href="#automatic-binary-installation" class="hash-link" aria-label="Direct link to Automatic Binary Installation" title="Direct link to Automatic Binary Installation">​</a></h3><p>In the previous example, you (and anyone else trying your project) would've
needed to manually compile and install the <code>polkadot</code> and <code>polkadot-parachain</code>
binaries, which can take several hours. Instead, you can configure Capi to
automatically install pre-built binaries (which we automatically build across a
matrix of versions and architectures).</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockTitle_Ktv7">nets.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> net</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> bins </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"capi/nets"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> bin </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">bins</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#000000"><span class="token plain">  polkadot</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"polkadot"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"v0.9.38"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#000000"><span class="token plain">  polkadotParachain</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">[</span><span class="token string" style="color:rgb(163, 21, 21)">"polkadot-parachain"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"v0.9.380"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">]</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> rococo </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> net</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">dev</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#000000"><span class="token plain">  bin</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> bin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">polkadot</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  chain</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"rococo-local"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> rococoContracts </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> rococoDev</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">parachain</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#000000"><span class="token plain">  bin</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> bin</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">polkadotParachain</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  chain</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"contracts-rococo-local"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  id</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">1000</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For certain chains, we also maintain patched builds with faster block times.
Simply add <code>-fast</code> to the binary name and watch your test time drop.</p><p>The infrastructure for these builds is located in the
<a href="https://github.com/paritytech/capi-binary-builds" target="_blank" rel="noopener noreferrer"><code>capi-binary-builds</code> repo</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pre-funded-development-users">Pre-Funded Development Users<a href="#pre-funded-development-users" class="hash-link" aria-label="Direct link to Pre-Funded Development Users" title="Direct link to Pre-Funded Development Users">​</a></h3><p>Every Capi development server can vend pre-funded development users. Calling
<code>createDevUsers</code> in your tests produces distinct users in each of your tests,
meaning that they can be safely run in parallel without interfering with each
other.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#000000;--prism-background-color:#ffffff"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#000000"><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> westendDev </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"@capi/westend-dev"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> createDevUsers </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"capi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> signature </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(163, 21, 21)">"capi/patterns/signature/polkadot"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> alexa</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"> billy </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(0, 0, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(0, 0, 255)">createDevUsers</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain"></span><span class="token keyword" style="color:rgb(0, 0, 255)">await</span><span class="token plain"> westendDev</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">Balances</span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">transfer</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    value</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(9, 134, 88)">12345n</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">    dest</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> billy</span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token plain">address</span><span class="token punctuation" style="color:rgb(4, 81, 165)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">signed</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token function" style="color:rgb(0, 0, 255)">signature</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">{</span><span class="token plain"> sender</span><span class="token operator" style="color:rgb(0, 0, 0)">:</span><span class="token plain"> alexa </span><span class="token punctuation" style="color:rgb(4, 81, 165)">}</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">sent</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">dbgStatus</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token string" style="color:rgb(163, 21, 21)">"Transfer:"</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">finalized</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#000000"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(4, 81, 165)">.</span><span class="token function" style="color:rgb(0, 0, 255)">run</span><span class="token punctuation" style="color:rgb(4, 81, 165)">(</span><span class="token punctuation" style="color:rgb(4, 81, 165)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You could safely run hundreds of instances of this test in parallel without
worrying about conflicting nonces or running out of funds. Although we love
Alice, Bob, Charlie, and the others... Capi's got more (up to 10,000 to be
exact).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="rune">Rune<a href="#rune" class="hash-link" aria-label="Direct link to Rune" title="Direct link to Rune">​</a></h3><p>Capi's API is built on top of Rune, a library we've developed that facilitates
building fluent APIs supporting derived queries and derived subscriptions. Rune
ensures correct results when working with multiple interrelated subscriptions,
which arise from cross-chain interactions. Other benefits include request
deduplication and type-safe error handling.</p><p>To learn more, see our <a href="/rune">Rune documentation</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="cross-engine-support">Cross-Engine Support<a href="#cross-engine-support" class="hash-link" aria-label="Direct link to Cross-Engine Support" title="Direct link to Cross-Engine Support">​</a></h3><p>Capi supports Deno, Node, and (modern) browsers. We are developing our codebase
using Deno, as we believe it provides the best basis for supporting these three
targets. We test every PR on both Deno and Node, and we'll soon expand this to
automatically test on browsers as well.</p><p>We've tested bundling Capi for the browser with Vite and Webpack (see
<a href="/setup/build_tool_integration">our guide on the necessary configuration</a>), but
if you're using a different bundler and run into any issues, please
<a href="https://github.com/paritytech/capi/issues/new/choose" target="_blank" rel="noopener noreferrer">open an issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><p>Next, we will be moving to a Smoldot-first developer experience.</p><p>We'll try to keep the API as stable as possible, but changes may need to be
made, as the API surface Smoldot exposes is very different from what we've been
working with so far.</p><p>For live information on what we're working on, see our
<a href="https://github.com/paritytech/capi/issues/1077" target="_blank" rel="noopener noreferrer">v0.1.0 roadmap</a>.</p><p>If you encounter any bugs, or there's anything you'd like to see us add to Capi,
please don't hesitate to
<a href="https://github.com/paritytech/capi/issues/new/choose" target="_blank" rel="noopener noreferrer">open an issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="acknowledgements">Acknowledgements<a href="#acknowledgements" class="hash-link" aria-label="Direct link to Acknowledgements" title="Direct link to Acknowledgements">​</a></h2><p>Thank you so much to the incredible folks that made Capi possible. A special
shout out to our two other Capi team members,
<a href="https://github.com/kratico" target="_blank" rel="noopener noreferrer">Matias Volpe</a> and
<a href="https://twitter.com/ryanleecode" target="_blank" rel="noopener noreferrer">Ryan Lee</a>; thank you for joining us in this
mission. Thank you to Parity leadership, especially
<a href="https://github.com/statictype" target="_blank" rel="noopener noreferrer">Andreea Efteene</a> and
<a href="https://twitter.com/sopke86" target="_blank" rel="noopener noreferrer">Stefan Sopic</a>. Thank you to
<a href="https://github.com/vjjft" target="_blank" rel="noopener noreferrer">Tom Ferguson</a> for his help on fleshing out Rune's
timing system. And, thank you to those whose projects and ideas have served as
inspiration for Capi. Some names for good measure:
<a href="https://github.com/sam-goodwin" target="_blank" rel="noopener noreferrer">Sam Goodwin</a>,
<a href="https://twitter.com/emeshbi" target="_blank" rel="noopener noreferrer">Elad Ben-Israel</a>,
<a href="https://github.com/schickling" target="_blank" rel="noopener noreferrer">Johannes Schickling</a>,
<a href="https://twitter.com/MichaelArnaldi" target="_blank" rel="noopener noreferrer">Michael Arnaldi</a>,
<a href="https://github.com/colelawrence" target="_blank" rel="noopener noreferrer">Cole Lawrence</a> and friends.</p><p>Finally, thank you for taking an interest in Capi!</p>]]></content:encoded>
        </item>
    </channel>
</rss>